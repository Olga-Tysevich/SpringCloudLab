services:

  spring-server:
    build:
      context: ./SpringServer
    ports:
      - "127.0.0.1:8001:8001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - internal

  spring-client:
    restart: always
    build:
      context: ./SpringClient
    ports:
      - "127.0.0.1:8002:8002"
    depends_on:
      spring-server:
        condition: service_healthy
    networks:
      - internal
    environment:
      SPRING_CLOUD_CONFIG_URI: http://spring-server:8001/

  eureka-server:
    restart: always
    build:
      context: ./EurekaServer
    ports:
      - "127.0.0.1:8010:8761"
    networks:
      - internal

  eureka-server-primary:
    restart: always
    build:
      context: ./EurekaServer
    ports:
      - "127.0.0.1:8011:8761"
    networks:
      - internal
    environment:
      - SPRING_PROFILES_ACTIVE=primary

  eureka-server-secondary:
    restart: always
    build:
      context: ./EurekaServer
    ports:
      - "127.0.0.1:8012:8761"
    networks:
      - internal
    environment:
      - SPRING_PROFILES_ACTIVE=secondary

  eureka-server-tertiary:
    restart: always
    build:
      context: ./EurekaServer
    ports:
      - "127.0.0.1:8013:8761"
    networks:
      - internal
    environment:
      - SPRING_PROFILES_ACTIVE=tertiary

  eureka-adjective:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:0:8080"
    depends_on:
      - eureka-server
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: adjective

  eureka-article:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:0:8080"
    depends_on:
      - eureka-server
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: article

  eureka-noun:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:0:8080"
    depends_on:
      - eureka-server
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: noun

  eureka-subject:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:0:8080"
    depends_on:
      - eureka-server
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: subject

  eureka-verb:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:0:8080"
    depends_on:
      - eureka-server
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: verb

  eureka-sentence:
    restart: always
    build:
      context: ./EurekaSentence
    ports:
      - "127.0.0.1:8020:8020"
    depends_on:
      - eureka-server
      - eureka-adjective
      - eureka-article
      - eureka-noun
      - eureka-subject
      - eureka-verb
      - spring-server
    networks:
      - internal
    environment:
      SPRING_PROFILES_ACTIVE: sentence

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "127.0.0.1:9090:9090"
    command: "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - internal

  grafana:
    image: grafana/grafana:9.5.2
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    networks:
      - internal

networks:
  internal:
    driver: bridge



